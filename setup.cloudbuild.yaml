# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# This is only run during the initial project setup, in the setup.sh script.
# This is not part of CI/CD.

# To run this outside of setup.sh, ensure you have the correct projects 
# and permissions created. Then run the Cloud Build command, eg:
# `gcloud builds submit --config setup.cloudbuild.yaml \
# --substitutions=_DIR=content-api,_SUFFIX=0029383

# NOTE: This deployment config is to be used for both the API and 
# website.  When they need to diverge, they should diverge.
# This will require adding additional steps this file, with explicit
# builds for both the API and website. 
# It will also require creating new files for deployments in the ops/ 
# directory, which is used for CI/CD.

steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_DIR}/${_DIR}'
      - '${_DIR}/.'

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_DIR}/${_DIR}'
  
  # Cloud Run Deploy Stage
  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - ${_DIR}-staging
      - --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_DIR}/${_DIR}
      - --region=${_REGION}
      - --platform=managed
      - --project=${_STAGING_PROJECT}
      - --allow-unauthenticated
      - --service-account=cloud-run-manager@${_STAGING_PROJECT}.iam.gserviceaccount.com
      - --set-env-vars=EMBLEM_API_URL=${_EMBLEM_API_URL}
      - --set-env-vars=EMBLEM_FIREBASE_API_KEY=${_EMBLEM_FIREBASE_API_KEY}
      - --set-env-vars=EMBLEM_FIREBASE_AUTH_DOMAIN=${_EMBLEM_FIREBASE_AUTH_DOMAIN}

  # Cloud Run Deploy Prod
  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - ${_DIR}-prod
      - --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_DIR}/${_DIR}
      - --region=${_REGION}
      - --platform=managed
      - --project=${_PROD_PROJECT}
      - --allow-unauthenticated
      - --service-account=cloud-run-manager@${_PROD_PROJECT}.iam.gserviceaccount.com
      - --set-env-vars=EMBLEM_API_URL=${_EMBLEM_API_URL}
      - --set-env-vars=EMBLEM_FIREBASE_API_KEY=${_EMBLEM_FIREBASE_API_KEY}
      - --set-env-vars=EMBLEM_FIREBASE_AUTH_DOMAIN=${_EMBLEM_FIREBASE_AUTH_DOMAIN}


# Default to us-central1
substitutions:
  _REGION: us-central1
