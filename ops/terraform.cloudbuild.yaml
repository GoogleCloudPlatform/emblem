steps:
- id: 'environment name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "Setting up Emblem $_ENV infrastructure"
      echo "***********************"
- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  env:
    - 'GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=$_TF_SERVICE_ACCT'
  args: 
  - '-c'
  - |
      if [ -d "environments/$_ENV/" ]; then
        cd environments/$_ENV
        terraform init -backend-config="bucket=${_STATE_GCS_BUCKET_NAME}" -backend-config="prefix=$_ENV"
      else
        echo "*************** TERRAFORM INIT ******************"
        echo "******* Environment $_ENV not found. ********"
        echo "*************************************************"
        exit 1
      fi 
 
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  env:
    - 'GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=$_TF_SERVICE_ACCT'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$_ENV/" ]; then
        cd environments/$_ENV
        terraform plan
      else
        echo "*************** TERRAFORM PLAN ******************"
        echo "******* Environment $_ENV not found. ********"
        echo "*************************************************"
        exit 1
      fi 

- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  env:
    - 'GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=$_TF_SERVICE_ACCT'
  args: 
  - '-c'
  - | 
      if [ -d "environments/$_ENV/" ]; then
        cd environments/$_ENV    
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "******* Environment $_ENV not found. ********"
        echo "*******************************************************************************"
      fi
